name: Build and Deploy TruLoad Frontend

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install DevOps Tools
      uses: Bengo-Hub/devops-k8s/.github/actions/install-devops-tools@main

    - name: Debug available secrets
      run: |
        echo "Checking which tokens are available..."
        [[ -n "${{ secrets.GH_PAT }}" ]] && echo "✅ GH_PAT is set" || echo "❌ GH_PAT not found"
        [[ -n "${{ secrets.GITHUB_SECRET }}" ]] && echo "✅ GITHUB_SECRET is set" || echo "❌ GITHUB_SECRET not found"
        [[ -n "${{ secrets.GITHUB_TOKEN }}" ]] && echo "✅ GITHUB_TOKEN is set (default, may lack cross-repo write)" || echo "❌ GITHUB_TOKEN not found"
        echo "Note: At least GH_PAT or GITHUB_SECRET must be set for cross-repo push to devops-k8s"

    - name: Set deployment variables
      run: |
        echo "DEPLOY=true" >> $GITHUB_ENV
        echo "SETUP_DATABASES=false" >> $GITHUB_ENV
        echo "DB_TYPES=postgres,redis" >> $GITHUB_ENV
        echo "NAMESPACE=truload" >> $GITHUB_ENV
        echo "ENV_SECRET_NAME=truload-frontend-env" >> $GITHUB_ENV
        echo "REGISTRY_SERVER=docker.io" >> $GITHUB_ENV
        echo "REGISTRY_NAMESPACE=codevertex" >> $GITHUB_ENV
        echo "VALUES_FILE_PATH=apps/truload-frontend/values.yaml" >> $GITHUB_ENV
        echo "DEPLOYMENT_SUMMARY_TITLE=TruLoad Frontend Deployment Summary" >> $GITHUB_ENV
        echo "DEPLOYMENT_SUCCESS_MESSAGE=TruLoad Frontend deployment completed! The UI should be accessible via the URLs above." >> $GITHUB_ENV
        echo "APPLICATION_DISPLAY_NAME=TruLoad Frontend" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_API_URL=https://api.truload.example.com" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_WS_URL=wss://api.truload.example.com/ws" >> $GITHUB_ENV

    - name: Run production deployment
      env:
        DOCKER_SSH_KEY: ${{ secrets.DOCKER_SSH_KEY }}
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_PAT: ${{ secrets.GH_PAT }}
        GITHUB_SECRET: ${{ secrets.GITHUB_SECRET }}
        REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        GITHUB_SHA: ${{ github.sha }}
        DEPLOY: true
        SETUP_DATABASES: false
        NAMESPACE: truload
        ENV_SECRET_NAME: truload-frontend-env
        REGISTRY_SERVER: docker.io
        REGISTRY_NAMESPACE: codevertex
        VALUES_FILE_PATH: apps/truload-frontend/values.yaml
        GIT_USER: ${{ secrets.GIT_USER }}
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        # Next.js build-time environment variables for API configuration
        NEXT_PUBLIC_API_URL: https://api.truload.example.com
        NEXT_PUBLIC_WS_URL: wss://api.truload.example.com/ws
        # SSH deployment variables
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        PROVIDER: contabo
        CONTABO_API: true
        # Contabo secrets
        CONTABO_CLIENT_ID: ${{ secrets.CONTABO_CLIENT_ID }}
        CONTABO_CLIENT_SECRET: ${{ secrets.CONTABO_CLIENT_SECRET }}
        CONTABO_API_USERNAME: ${{ secrets.CONTABO_API_USERNAME }}
        CONTABO_API_PASSWORD: ${{ secrets.CONTABO_API_PASSWORD }}
        # Deployment variables
        DEPLOYMENT_SUMMARY_TITLE: TruLoad Frontend Deployment Summary
        DEPLOYMENT_SUCCESS_MESSAGE: TruLoad Frontend deployment completed!
        APPLICATION_DISPLAY_NAME: TruLoad Frontend
      run: |
        chmod +x build.sh
        ./build.sh

    - name: Tag and push :latest
      if: success()
      env:
        REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      run: |
        set -e
        : "${REGISTRY_SERVER:=docker.io}"
        : "${REGISTRY_NAMESPACE:=codevertex}"
        IMAGE_REPO="${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/truload-frontend"
        SHORT_SHA=${GITHUB_SHA::8}
        echo "Tagging ${IMAGE_REPO}:${SHORT_SHA} as :latest and pushing"
        echo "$REGISTRY_PASSWORD" | docker login "$REGISTRY_SERVER" -u "$REGISTRY_USERNAME" --password-stdin
        docker pull "${IMAGE_REPO}:${SHORT_SHA}" || true
        docker tag "${IMAGE_REPO}:${SHORT_SHA}" "${IMAGE_REPO}:latest"
        docker push "${IMAGE_REPO}:latest"


